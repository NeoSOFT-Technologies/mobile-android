plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
apply from: "../jacoco.gradle"



android {
    compileSdk AppConfig.compileSdk

    defaultConfig {
        minSdk AppConfig.minSdk
        targetSdk AppConfig.targetSdk

        testInstrumentationRunner AppConfig.androidTestInstrumentation
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }


    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField "String", "BASE_URL", project.endpoint_staging
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", project.endpoint_release
        }
        dev {
            initWith buildTypes.release
            buildConfigField "String", "BASE_URL", project.endpoint_dev
        }

        qa {
            initWith buildTypes.release
            buildConfigField "String", "BASE_URL", project.endpoint_qa
        }

        staging {
            initWith buildTypes.release
            buildConfigField "String", "BASE_URL", project.endpoint_staging
        }

        prod {
            initWith buildTypes.release
            buildConfigField "String", "BASE_URL", project.endpoint_prod
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation AppDependencies.coreKtx
    implementation project(path:':domain')

    //room
    api AppDependencies.roomRuntime
    api AppDependencies.roomKtx
    kapt(AppDependencies.kaptRoomCompiler)

    //retrofit
    api AppDependencies.retrofit
    api AppDependencies.retrofitCoverterGson
    api AppDependencies.retrofitLogginInterceptor
    api AppDependencies.moshiVersion
    api AppDependencies.moshiKotlin
    kapt AppDependencies.moshiCodeGen


    implementation AppDependencies.hiltAndroid
    kapt AppDependencies.hiltAndroidCompiler

    implementation AppDependencies.pagingAndroid

    //test libs
    testImplementation(AppDependencies.testLibraries)

    androidTestImplementation(AppDependencies.androidTestLibraries)


}